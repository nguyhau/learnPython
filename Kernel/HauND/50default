#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

# return 0 if root is mounted on a network filesystem
root_is_nfs() {
	sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\1 \2/p' /proc/mounts |
	grep -q "^/ \(nfs\|smbfs\|ncp\|coda\)$"
}

have_bin_ip=0
if [ -x /sbin/ip ]; then
	have_bin_ip=1
fi

[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
echo "-------------- Start udhc -------------------">>log_udhc.txt
				for para in $@; do
					echo "para:$para">>log_udhc.txt
				done
echo "interface: $interface">>log_udhc.txt
echo "broadcast: $BROADCAST">>log_udhc.txt
echo "netmask: $mask">>log_udhc.txt
echo "metric: $metric">>log_udhc.txt
echo "router: $router">>log_udhc.txt
echo "domain: $domain">>log_udhc.txt
echo "parameter: $1 ">>log_udhc.txt
route>>log_udhc.txt &2>1
case "$1" in
	deconfig)
		if [ -x /sbin/resolvconf ]; then
			/sbin/resolvconf -d "${interface}.udhcpc"
		fi
		if ! root_is_nfs ; then
			# Flush ip assignment of all network interfaces
			if [ $have_bin_ip -eq 1 ]; then
				for iface in $(ls /sys/class/net | grep -v ^lo); do
					ip addr flush dev $iface
				done
				ip link set dev $interface up
			else
				for iface in $(ls /sys/class/net | grep -v ^lo); do
					/sbin/ifconfig $iface 0.0.0.0
				done
			fi
		fi
		route>>log_udhc.txt &2>1
		;;

	renew|bound)
		if [ $have_bin_ip -eq 1 ]; then
			ip addr add dev $interface local $ip/$mask $BROADCAST
		else
			/sbin/ifconfig $interface $ip $BROADCAST $NETMASK
		fi

		if [ -n "$router" ] ; then
			if ! root_is_nfs ; then
				if [ $have_bin_ip -eq 1 ]; then
					while ip route del default dev $interface 2>/dev/null ; do
						:
					done
				else
					while route del default gw 0.0.0.0 dev $interface 2>/dev/null ; do
						:
					done
				fi
			fi

			route>>log_udhc.txt &2>1
			metric=10
			for i in $router ; do
				if [ $have_bin_ip -eq 1 ]; then
					ip route add default via $i metric $metric
				else
					route add default gw $i dev $interface metric $metric 2>/dev/null
				fi
				metric=$(($metric + 1))
			done
		fi

		route>>log_udhc.txt &2>1
		# Update resolver configuration file
		R=""
		[ -n "$domain" ] && R="domain $domain
                "
		for i in $dns; do
			echo "$0: Adding DNS $i"
			R="${R}nameserver $i
                        "
		done

		if [ -x /sbin/resolvconf ]; then
			echo -n "$R" | /sbin/resolvconf -a "${interface}.udhcpc"
		else
			echo -n "$R" > "$RESOLV_CONF"
		fi
		;;
esac
echo "-------------- End udhc ----------------">>log_udhc.txt
exit 0
